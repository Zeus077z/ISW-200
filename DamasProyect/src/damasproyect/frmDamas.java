/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package damasproyect;

;import com.utn.damas.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
/**
 *
 * @author Daniel
 */
//Variables que se usar√°n

public class frmDamas extends javax.swing.JFrame {
    public Damas _Damas = new Damas();
    int turno,contadorUno,contadorDos,cont1,cont2;
    boolean ganador= false;
    boolean verificacion = _Damas.verificacion;
    boolean color = false;
   
    
    public frmDamas() {
        turno = contadorUno = contadorDos = 1;
        initComponents();
        this.setLocationRelativeTo(null);
    }               
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        c0_f0 = new javax.swing.JLabel();
        c0_f1 = new javax.swing.JLabel();
        c0_f2 = new javax.swing.JLabel();
        c0_f3 = new javax.swing.JLabel();
        c0_f4 = new javax.swing.JLabel();
        c0_f5 = new javax.swing.JLabel();
        c0_f6 = new javax.swing.JLabel();
        c0_f7 = new javax.swing.JLabel();
        c1_f0 = new javax.swing.JLabel();
        c1_f1 = new javax.swing.JLabel();
        c1_f2 = new javax.swing.JLabel();
        c1_f3 = new javax.swing.JLabel();
        c1_f4 = new javax.swing.JLabel();
        c1_f5 = new javax.swing.JLabel();
        c1_f6 = new javax.swing.JLabel();
        c1_f7 = new javax.swing.JLabel();
        c2_f0 = new javax.swing.JLabel();
        c2_f1 = new javax.swing.JLabel();
        c2_f2 = new javax.swing.JLabel();
        c2_f3 = new javax.swing.JLabel();
        c2_f4 = new javax.swing.JLabel();
        c2_f5 = new javax.swing.JLabel();
        c2_f6 = new javax.swing.JLabel();
        c2_f7 = new javax.swing.JLabel();
        c3_f0 = new javax.swing.JLabel();
        c3_f1 = new javax.swing.JLabel();
        c3_f2 = new javax.swing.JLabel();
        c3_f3 = new javax.swing.JLabel();
        c3_f4 = new javax.swing.JLabel();
        c3_f5 = new javax.swing.JLabel();
        c3_f6 = new javax.swing.JLabel();
        c3_f7 = new javax.swing.JLabel();
        c4_f0 = new javax.swing.JLabel();
        c4_f1 = new javax.swing.JLabel();
        c4_f2 = new javax.swing.JLabel();
        c4_f3 = new javax.swing.JLabel();
        c4_f4 = new javax.swing.JLabel();
        c4_f5 = new javax.swing.JLabel();
        c4_f6 = new javax.swing.JLabel();
        c4_f7 = new javax.swing.JLabel();
        c5_f0 = new javax.swing.JLabel();
        c5_f1 = new javax.swing.JLabel();
        c5_f2 = new javax.swing.JLabel();
        c5_f3 = new javax.swing.JLabel();
        c5_f4 = new javax.swing.JLabel();
        c5_f5 = new javax.swing.JLabel();
        c5_f6 = new javax.swing.JLabel();
        c5_f7 = new javax.swing.JLabel();
        c6_f0 = new javax.swing.JLabel();
        c6_f1 = new javax.swing.JLabel();
        c6_f2 = new javax.swing.JLabel();
        c6_f3 = new javax.swing.JLabel();
        c6_f4 = new javax.swing.JLabel();
        c6_f5 = new javax.swing.JLabel();
        c6_f6 = new javax.swing.JLabel();
        c6_f7 = new javax.swing.JLabel();
        c7_f0 = new javax.swing.JLabel();
        c7_f1 = new javax.swing.JLabel();
        c7_f2 = new javax.swing.JLabel();
        c7_f3 = new javax.swing.JLabel();
        c7_f4 = new javax.swing.JLabel();
        c7_f5 = new javax.swing.JLabel();
        c7_f6 = new javax.swing.JLabel();
        c7_f7 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(8, 8));

        c0_f0.setBackground(new java.awt.Color(225, 187, 138));
        c0_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f0.setOpaque(true);
        jPanel1.add(c0_f0);

        c0_f1.setBackground(new java.awt.Color(176, 108, 22));
        c0_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c0_f1.setOpaque(true);
        c0_f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c0_f1MouseReleased(evt);
            }
        });
        jPanel1.add(c0_f1);

        c0_f2.setBackground(new java.awt.Color(225, 187, 138));
        c0_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f2.setOpaque(true);
        jPanel1.add(c0_f2);

        c0_f3.setBackground(new java.awt.Color(176, 108, 22));
        c0_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c0_f3.setOpaque(true);
        c0_f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c0_f3MouseReleased(evt);
            }
        });
        jPanel1.add(c0_f3);

        c0_f4.setBackground(new java.awt.Color(225, 187, 138));
        c0_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f4.setOpaque(true);
        jPanel1.add(c0_f4);

        c0_f5.setBackground(new java.awt.Color(176, 108, 22));
        c0_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c0_f5.setOpaque(true);
        c0_f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c0_f5MouseReleased(evt);
            }
        });
        jPanel1.add(c0_f5);

        c0_f6.setBackground(new java.awt.Color(225, 187, 138));
        c0_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f6.setOpaque(true);
        jPanel1.add(c0_f6);

        c0_f7.setBackground(new java.awt.Color(176, 108, 22));
        c0_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c0_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c0_f7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c0_f7.setOpaque(true);
        c0_f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c0_f7MouseReleased(evt);
            }
        });
        jPanel1.add(c0_f7);

        c1_f0.setBackground(new java.awt.Color(176, 108, 22));
        c1_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c1_f0.setOpaque(true);
        c1_f0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c1_f0MouseReleased(evt);
            }
        });
        jPanel1.add(c1_f0);

        c1_f1.setBackground(new java.awt.Color(225, 187, 138));
        c1_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f1.setOpaque(true);
        jPanel1.add(c1_f1);

        c1_f2.setBackground(new java.awt.Color(176, 108, 22));
        c1_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c1_f2.setOpaque(true);
        c1_f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c1_f2MouseReleased(evt);
            }
        });
        jPanel1.add(c1_f2);

        c1_f3.setBackground(new java.awt.Color(225, 187, 138));
        c1_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f3.setOpaque(true);
        jPanel1.add(c1_f3);

        c1_f4.setBackground(new java.awt.Color(176, 108, 22));
        c1_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c1_f4.setOpaque(true);
        c1_f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c1_f4MouseReleased(evt);
            }
        });
        jPanel1.add(c1_f4);

        c1_f5.setBackground(new java.awt.Color(225, 187, 138));
        c1_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f5.setOpaque(true);
        jPanel1.add(c1_f5);

        c1_f6.setBackground(new java.awt.Color(176, 108, 22));
        c1_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c1_f6.setOpaque(true);
        c1_f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c1_f6MouseReleased(evt);
            }
        });
        jPanel1.add(c1_f6);

        c1_f7.setBackground(new java.awt.Color(225, 187, 138));
        c1_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c1_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c1_f7.setOpaque(true);
        jPanel1.add(c1_f7);

        c2_f0.setBackground(new java.awt.Color(225, 187, 138));
        c2_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f0.setOpaque(true);
        jPanel1.add(c2_f0);

        c2_f1.setBackground(new java.awt.Color(176, 108, 22));
        c2_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c2_f1.setOpaque(true);
        c2_f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c2_f1MouseReleased(evt);
            }
        });
        jPanel1.add(c2_f1);

        c2_f2.setBackground(new java.awt.Color(225, 187, 138));
        c2_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f2.setOpaque(true);
        jPanel1.add(c2_f2);

        c2_f3.setBackground(new java.awt.Color(176, 108, 22));
        c2_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c2_f3.setOpaque(true);
        c2_f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c2_f3MouseReleased(evt);
            }
        });
        jPanel1.add(c2_f3);

        c2_f4.setBackground(new java.awt.Color(225, 187, 138));
        c2_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f4.setOpaque(true);
        jPanel1.add(c2_f4);

        c2_f5.setBackground(new java.awt.Color(176, 108, 22));
        c2_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c2_f5.setOpaque(true);
        c2_f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c2_f5MouseReleased(evt);
            }
        });
        jPanel1.add(c2_f5);

        c2_f6.setBackground(new java.awt.Color(225, 187, 138));
        c2_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f6.setOpaque(true);
        jPanel1.add(c2_f6);

        c2_f7.setBackground(new java.awt.Color(176, 108, 22));
        c2_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c2_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c2_f7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c2_f7.setOpaque(true);
        c2_f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c2_f7MouseReleased(evt);
            }
        });
        jPanel1.add(c2_f7);

        c3_f0.setBackground(new java.awt.Color(176, 108, 22));
        c3_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c3_f0.setOpaque(true);
        c3_f0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c3_f0MouseReleased(evt);
            }
        });
        jPanel1.add(c3_f0);

        c3_f1.setBackground(new java.awt.Color(225, 187, 138));
        c3_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f1.setOpaque(true);
        jPanel1.add(c3_f1);

        c3_f2.setBackground(new java.awt.Color(176, 108, 22));
        c3_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c3_f2.setOpaque(true);
        c3_f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c3_f2MouseReleased(evt);
            }
        });
        jPanel1.add(c3_f2);

        c3_f3.setBackground(new java.awt.Color(225, 187, 138));
        c3_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f3.setOpaque(true);
        jPanel1.add(c3_f3);

        c3_f4.setBackground(new java.awt.Color(176, 108, 22));
        c3_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c3_f4.setOpaque(true);
        c3_f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c3_f4MouseReleased(evt);
            }
        });
        jPanel1.add(c3_f4);

        c3_f5.setBackground(new java.awt.Color(225, 187, 138));
        c3_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f5.setOpaque(true);
        jPanel1.add(c3_f5);

        c3_f6.setBackground(new java.awt.Color(176, 108, 22));
        c3_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c3_f6.setOpaque(true);
        c3_f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c3_f6MouseReleased(evt);
            }
        });
        jPanel1.add(c3_f6);

        c3_f7.setBackground(new java.awt.Color(225, 187, 138));
        c3_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c3_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c3_f7.setOpaque(true);
        jPanel1.add(c3_f7);

        c4_f0.setBackground(new java.awt.Color(225, 187, 138));
        c4_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f0.setOpaque(true);
        jPanel1.add(c4_f0);

        c4_f1.setBackground(new java.awt.Color(176, 108, 22));
        c4_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c4_f1.setOpaque(true);
        c4_f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c4_f1MouseReleased(evt);
            }
        });
        jPanel1.add(c4_f1);

        c4_f2.setBackground(new java.awt.Color(225, 187, 138));
        c4_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f2.setOpaque(true);
        jPanel1.add(c4_f2);

        c4_f3.setBackground(new java.awt.Color(176, 108, 22));
        c4_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c4_f3.setOpaque(true);
        c4_f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c4_f3MouseReleased(evt);
            }
        });
        jPanel1.add(c4_f3);

        c4_f4.setBackground(new java.awt.Color(225, 187, 138));
        c4_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f4.setOpaque(true);
        jPanel1.add(c4_f4);

        c4_f5.setBackground(new java.awt.Color(176, 108, 22));
        c4_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c4_f5.setOpaque(true);
        c4_f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c4_f5MouseReleased(evt);
            }
        });
        jPanel1.add(c4_f5);

        c4_f6.setBackground(new java.awt.Color(225, 187, 138));
        c4_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f6.setOpaque(true);
        jPanel1.add(c4_f6);

        c4_f7.setBackground(new java.awt.Color(176, 108, 22));
        c4_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c4_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c4_f7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c4_f7.setOpaque(true);
        c4_f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c4_f7MouseReleased(evt);
            }
        });
        jPanel1.add(c4_f7);

        c5_f0.setBackground(new java.awt.Color(176, 108, 22));
        c5_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c5_f0.setOpaque(true);
        c5_f0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c5_f0MouseReleased(evt);
            }
        });
        jPanel1.add(c5_f0);

        c5_f1.setBackground(new java.awt.Color(225, 187, 138));
        c5_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f1.setOpaque(true);
        jPanel1.add(c5_f1);

        c5_f2.setBackground(new java.awt.Color(176, 108, 22));
        c5_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c5_f2.setOpaque(true);
        c5_f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c5_f2MouseReleased(evt);
            }
        });
        jPanel1.add(c5_f2);

        c5_f3.setBackground(new java.awt.Color(225, 187, 138));
        c5_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f3.setOpaque(true);
        jPanel1.add(c5_f3);

        c5_f4.setBackground(new java.awt.Color(176, 108, 22));
        c5_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c5_f4.setOpaque(true);
        c5_f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c5_f4MouseReleased(evt);
            }
        });
        jPanel1.add(c5_f4);

        c5_f5.setBackground(new java.awt.Color(225, 187, 138));
        c5_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f5.setOpaque(true);
        jPanel1.add(c5_f5);

        c5_f6.setBackground(new java.awt.Color(176, 108, 22));
        c5_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c5_f6.setOpaque(true);
        c5_f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c5_f6MouseReleased(evt);
            }
        });
        jPanel1.add(c5_f6);

        c5_f7.setBackground(new java.awt.Color(225, 187, 138));
        c5_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c5_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c5_f7.setOpaque(true);
        jPanel1.add(c5_f7);

        c6_f0.setBackground(new java.awt.Color(225, 187, 138));
        c6_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f0.setOpaque(true);
        jPanel1.add(c6_f0);

        c6_f1.setBackground(new java.awt.Color(176, 108, 22));
        c6_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c6_f1.setOpaque(true);
        c6_f1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c6_f1MouseReleased(evt);
            }
        });
        jPanel1.add(c6_f1);

        c6_f2.setBackground(new java.awt.Color(225, 187, 138));
        c6_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f2.setOpaque(true);
        jPanel1.add(c6_f2);

        c6_f3.setBackground(new java.awt.Color(176, 108, 22));
        c6_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c6_f3.setOpaque(true);
        c6_f3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c6_f3MouseReleased(evt);
            }
        });
        jPanel1.add(c6_f3);

        c6_f4.setBackground(new java.awt.Color(225, 187, 138));
        c6_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f4.setOpaque(true);
        jPanel1.add(c6_f4);

        c6_f5.setBackground(new java.awt.Color(176, 108, 22));
        c6_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c6_f5.setOpaque(true);
        c6_f5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c6_f5MouseReleased(evt);
            }
        });
        jPanel1.add(c6_f5);

        c6_f6.setBackground(new java.awt.Color(225, 187, 138));
        c6_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f6.setOpaque(true);
        jPanel1.add(c6_f6);

        c6_f7.setBackground(new java.awt.Color(176, 108, 22));
        c6_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c6_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c6_f7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c6_f7.setOpaque(true);
        c6_f7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c6_f7MouseReleased(evt);
            }
        });
        jPanel1.add(c6_f7);

        c7_f0.setBackground(new java.awt.Color(176, 108, 22));
        c7_f0.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c7_f0.setOpaque(true);
        c7_f0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c7_f0MouseReleased(evt);
            }
        });
        jPanel1.add(c7_f0);

        c7_f1.setBackground(new java.awt.Color(225, 187, 138));
        c7_f1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f1.setOpaque(true);
        jPanel1.add(c7_f1);

        c7_f2.setBackground(new java.awt.Color(176, 108, 22));
        c7_f2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c7_f2.setOpaque(true);
        c7_f2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c7_f2MouseReleased(evt);
            }
        });
        jPanel1.add(c7_f2);

        c7_f3.setBackground(new java.awt.Color(225, 187, 138));
        c7_f3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f3.setOpaque(true);
        jPanel1.add(c7_f3);

        c7_f4.setBackground(new java.awt.Color(176, 108, 22));
        c7_f4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c7_f4.setOpaque(true);
        c7_f4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c7_f4MouseReleased(evt);
            }
        });
        jPanel1.add(c7_f4);

        c7_f5.setBackground(new java.awt.Color(225, 187, 138));
        c7_f5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f5.setOpaque(true);
        jPanel1.add(c7_f5);

        c7_f6.setBackground(new java.awt.Color(176, 108, 22));
        c7_f6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        c7_f6.setOpaque(true);
        c7_f6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                c7_f6MouseReleased(evt);
            }
        });
        jPanel1.add(c7_f6);

        c7_f7.setBackground(new java.awt.Color(225, 187, 138));
        c7_f7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        c7_f7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        c7_f7.setOpaque(true);
        jPanel1.add(c7_f7);

        jMenu1.setText("Nuevo");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Terminar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 658, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
//Funcion que dar√° un valor inicial; que al mismo tiempo va ser usada para cuando se presione el bot√≥n de (Nuevo).

    private void pintarDamas(){
        turno=1;
        contadorUno = 12;
        contadorDos = 12;
        this.verificacion = false;
        this.c0_f1.setText("O");
        this.c0_f1.setForeground(java.awt.Color.BLACK);
        
        this.c0_f3.setText("O");
        this.c0_f3.setForeground(java.awt.Color.BLACK);

        this.c0_f5.setText("O");
        this.c0_f5.setForeground(java.awt.Color.BLACK);

        this.c0_f7.setText("O");
        this.c0_f7.setForeground(java.awt.Color.BLACK);

        this.c1_f0.setText("O");
        this.c1_f0.setForeground(java.awt.Color.BLACK);

        this.c1_f2.setText("O");
        this.c1_f2.setForeground(java.awt.Color.BLACK);
        
        this.c1_f4.setText("O");
        this.c1_f4.setForeground(java.awt.Color.BLACK);
        
        this.c1_f6.setText("O");
        this.c1_f6.setForeground(java.awt.Color.BLACK);
        
        this.c2_f1.setText("O");
        this.c2_f1.setForeground(java.awt.Color.BLACK);
        
        this.c2_f3.setText("O");
        this.c2_f3.setForeground(java.awt.Color.BLACK);
        
        this.c2_f5.setText("O");
        this.c2_f5.setForeground(java.awt.Color.BLACK);
        
        this.c2_f7.setText("O");
        this.c2_f7.setForeground(java.awt.Color.BLACK);
        
        this.c5_f0.setText("O");
        this.c5_f0.setForeground(java.awt.Color.WHITE);
        
        this.c5_f2.setText("O");
        this.c5_f2.setForeground(java.awt.Color.WHITE);
        
        this.c5_f4.setText("O");
        this.c5_f4.setForeground(java.awt.Color.WHITE);
        
        this.c5_f6.setText("O");
        this.c5_f6.setForeground(java.awt.Color.WHITE);
        
        this.c6_f1.setText("O");
        this.c6_f1.setForeground(java.awt.Color.WHITE);
        
        this.c6_f3.setText("O");
        this.c6_f3.setForeground(java.awt.Color.WHITE);
        
        this.c6_f5.setText("O");
        this.c6_f5.setForeground(java.awt.Color.WHITE);
        
        this.c6_f7.setText("O");
        this.c6_f7.setForeground(java.awt.Color.WHITE);
        
        this.c7_f0.setText("O");
        this.c7_f0.setForeground(java.awt.Color.WHITE);
        
        this.c7_f2.setText("O");
        this.c7_f2.setForeground(java.awt.Color.WHITE);
        
        this.c7_f4.setText("O");
        this.c7_f4.setForeground(java.awt.Color.WHITE);
        
        this.c7_f6.setText("O");
        this.c7_f6.setForeground(java.awt.Color.WHITE);
        
        this.c3_f0.setText("");
        this.c3_f2.setText("");
        this.c3_f4.setText("");
        this.c3_f6.setText("");
        this.c4_f1.setText("");
        this.c4_f3.setText("");
        this.c4_f5.setText("");
        this.c4_f7.setText("");


    }
    
//La funci√≥n movimiento sirve para pintar la ficha en el momento de cada turno, pero a su vez solo funciona para un movimiento donde no hay que comer
    
    public void movimiento(JLabel espacio){
            if(espacio.getText().equals("")){
                switch (turno%2) {
                    case 1:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.WHITE);
                        turno++;
                        break;
                    case 0:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.BLACK);
                        turno++;
                        break;
                    default:
                        JOptionPane.showMessageDialog(null,"Ya hay una ficha en esta posici√≥n");
                        break;
                }
              
            }
        }

//La funci√≥n movimientoComer es usada por turno cuando una ficha presiona otra de otro color, entonces evalua cual es el color de ficha que
    //pondr√° sobre la que se va a (comer).
    
    public void movimientoComer(JLabel espacio){
        if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.BLACK)){
                switch (turno%2) {
                    case 1:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.WHITE);
                        turno++;
                        break;
                    case 0:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.BLACK);
                        turno++;
                        break;
                    default:
                        JOptionPane.showMessageDialog(null,"Ya hay una ficha en esta posici√≥n");
                        break;
                }              
            }else if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.WHITE)){
                switch (turno%2) {
                    case 1:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.WHITE);
                        turno++;
                        break;
                    case 0:
                        espacio.setText("O");
                        espacio.setForeground(java.awt.Color.BLACK);
                        turno++;
                        break;
                    default:
                        JOptionPane.showMessageDialog(null,"Ya hay una ficha en esta posici√≥n");
                        break;
                }
            }
    }
   //funci√≥n verificar devuelve un boolean que con el es necesario para las decisiones de la funci√≥n "cambiar"
    
    public boolean verificar(JLabel fichas){   
        boolean veri = false;
        if(fichas.getText().equals("O")){
            if(fichas.getForeground().equals(java.awt.Color.BLACK)){
                this.color = true;
            }else if(fichas.getForeground().equals(java.awt.Color.WHITE)){
                this.color = false;
            }
            veri = true;  
        }else if(fichas.getText().equals("")){
            veri = false;
        }
         return veri;
         
    }
    //"cambiar" funciona con lo que retorna "verificar", los dos hacen que si a√∫n no ha quitado una ficha para moverla, no va a dejar que coloque una adicional 
    //en otra posici√≥n.
   
    public void cambiar(JLabel ficha){
        if(this.verificar(ficha)==false){
            if(this.verificacion == true){
                movimiento(ficha);               
            }else{
                JOptionPane.showMessageDialog(null,"No ha elejido una ficha");
            }          
        }else if(this.verificar(ficha)==true){
            ficha.setText(""); 
            }
            this.verificacion = true;
           
            }
    public void comerCostados(JLabel espacio,JLabel fichaUno, JLabel fichaDos){
        if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.WHITE)&&fichaUno.getText().equals("O")&&fichaUno.getForeground().equals(java.awt.Color.WHITE)&&fichaDos.getText().equals("O")&&fichaDos.getForeground().equals(java.awt.Color.WHITE)){
            JOptionPane.showMessageDialog(null,"No puede mover esta ficha!");
            cont1++;
            if(contadorUno == cont1){
                JOptionPane.showMessageDialog(null,"Jugador uno se ha quedado bloqueado, gana el jugador dos!");
                ganador = true;
            }
            //Lo mismo que antes, pero para las fichas negras.
        }else if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.BLACK)&&fichaUno.getText().equals("O")&&fichaUno.getForeground().equals(java.awt.Color.BLACK)&&fichaUno.getText().equals("O")&&fichaDos.getForeground().equals(java.awt.Color.BLACK)){
            JOptionPane.showMessageDialog(null,"No puede mover esta ficha!");
            cont2++;
            if(contadorDos == cont2){
                JOptionPane.showMessageDialog(null,"Jugador dos se ha quedado bloqueado, gana el jugador uno!");
                ganador = true;
            }
            //Si no est√° bloqueado..
        }else{
            //Si en el momento del turno de la ficha negra, presiona una blanca,va a preguntar si se puede comer esa ficha en diagonal hacia la derecha.          
            if(turno%2==0&&espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.WHITE)){
                if(fichaUno.getText().equals("O")&&fichaUno.getForeground().equals(java.awt.Color.BLACK)&&fichaDos.getText().equals("")){
                        movimientoComer(espacio);
                        contadorUno--;
                        if(contadorUno==0){
                            JOptionPane.showMessageDialog(null,"Ha ganado el jugador dos!");
                             ganador = true;
                        }else{
                            JOptionPane.showMessageDialog(null,"Comi√≥ jugador dos!");
                        }
                        //Para diagonal izquierda de arrriba para abajo.
                        
                }else if(fichaUno.getText().equals("O")&&fichaUno.getForeground().equals(java.awt.Color.WHITE)&&fichaDos.getText().equals("")){ 
                        movimientoComer(espacio);
                        contadorUno--;    
                        if(contadorUno==0){
                            JOptionPane.showMessageDialog(null,"Ha ganado el jugador dos!");
                             ganador = true;
                        }else{
                            JOptionPane.showMessageDialog(null,"Comi√≥ jugador dos!");
                        }
                        //Si no entra en ninguna se le devuelve que no es el turno de el.
                }else{
                  JOptionPane.showMessageDialog(null,"No es su turno!"); 
                } 
                //Lo mismo de antes pero ahora para la ficha negra.
            }else if(turno%2==1&&espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.BLACK)){                 
                        if(fichaDos.getText().equals("O")&&fichaDos.getForeground().equals(java.awt.Color.WHITE)&&fichaUno.getText().equals("")){
                            movimientoComer(espacio);
                            contadorDos--;
                            if(contadorDos==0){
                                JOptionPane.showMessageDialog(null,"Ha ganado el jugador uno!");
                                 ganador = true;
                            }else{
                                JOptionPane.showMessageDialog(null,"Comi√≥ jugador uno!");
                            }
                        }else if(fichaUno.getText().equals("O")&&fichaUno.getForeground().equals(java.awt.Color.WHITE)&&fichaDos.getText().equals("")){ 
                            movimientoComer(espacio);
                            contadorDos--;    
                            if(contadorDos==0){
                                JOptionPane.showMessageDialog(null,"Ha ganado el jugador uno!");
                                 ganador = true;
                            }else{
                                JOptionPane.showMessageDialog(null,"Comi√≥ jugador uno!");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null,"No es su turno!");
                        }
            }else{
                verificar(espacio);
                cambiar(espacio);
                
            }
        }
    }
    //La funci√≥n comerCentrales es la mas grande de todas las funciones anteriores, esta tiene para verificar cual jugador ser√° el ganador, tambi√©n es la que valida
    //si hay opci√≥n para marcar a la casilla de el jugador enemigo, pide 5 JLabel, cada uno para su respectiva funci√≥n
    public void comerCentrales(JLabel espacio,JLabel fichaFrenteI, JLabel fichaFrenteD,JLabel fichaAtrasI,JLabel fichaAtrasD){
      if(!ganador){
          //Si para el turno de la ficha blanca a los dos lados est√° bloqueada por mismas fichas de blanco.
        if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.WHITE)&&fichaFrenteI.getText().equals("O")&&fichaFrenteI.getForeground().equals(java.awt.Color.WHITE)&&fichaFrenteD.getText().equals("O")&&fichaFrenteD.getForeground().equals(java.awt.Color.WHITE)){
            JOptionPane.showMessageDialog(null,"No puede mover esta ficha!");
            cont1++;
            if(contadorUno == cont1){
                JOptionPane.showMessageDialog(null,"Jugador uno se ha quedado bloqueado, gana el jugador dos!");
                ganador = true;
            }
            //Lo mismo que antes, pero para las fichas negras.
        }else if(espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.BLACK)&&fichaAtrasI.getText().equals("O")&&fichaAtrasI.getForeground().equals(java.awt.Color.BLACK)&&fichaAtrasD.getText().equals("O")&&fichaAtrasD.getForeground().equals(java.awt.Color.BLACK)){
            JOptionPane.showMessageDialog(null,"No puede mover esta ficha!");
            cont2++;
            if(contadorDos == cont2){
                JOptionPane.showMessageDialog(null,"Jugador dos se ha quedado bloqueado, gana el jugador uno!");
                ganador = true;
            }
            //Si no est√° bloqueado..
        }else{
            //Si en el momento del turno de la ficha negra, presiona una blanca,va a preguntar si se puede comer esa ficha en diagonal hacia la derecha.          
            if(turno%2==0&&espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.WHITE)){
                if(fichaFrenteI.getText().equals("O")&&fichaFrenteI.getForeground().equals(java.awt.Color.BLACK)&&fichaAtrasD.getText().equals("")){
                        movimientoComer(espacio);
                        contadorUno--;
                        if(contadorUno==0){
                            JOptionPane.showMessageDialog(null,"Ha ganado el jugador dos!");
                             ganador = true;
                        }else{
                            JOptionPane.showMessageDialog(null,"Comi√≥ jugador dos!");
                        }
                        //Para diagonal izquierda de arrriba para abajo.
                        
                }else if(fichaFrenteD.getText().equals("O")&&fichaFrenteD.getForeground().equals(java.awt.Color.BLACK)&&fichaAtrasI.getText().equals("")){ 
                        movimientoComer(espacio);
                        contadorUno--;    
                        if(contadorUno==0){
                            JOptionPane.showMessageDialog(null,"Ha ganado el jugador dos!");
                             ganador = true;
                        }else{
                            JOptionPane.showMessageDialog(null,"Comi√≥ jugador dos!");
                        }
                        //Si no entra en ninguna se le devuelve que no es el turno de el.
                }else{
                  JOptionPane.showMessageDialog(null,"No es su turno!"); 
                } 
                //Lo mismo de antes pero ahora para la ficha negra.
            }else if(turno%2==1&&espacio.getText().equals("O")&&espacio.getForeground().equals(java.awt.Color.BLACK)){                 
                        if(fichaFrenteI.getText().equals("O")&&fichaFrenteI.getForeground().equals(java.awt.Color.WHITE)&&fichaAtrasD.getText().equals("")){
                            movimientoComer(espacio);
                            contadorDos--;
                            if(contadorDos==0){
                                JOptionPane.showMessageDialog(null,"Ha ganado el jugador uno!");
                                 ganador = true;
                            }else{
                                JOptionPane.showMessageDialog(null,"Comi√≥ jugador uno!");
                            }
                        }else if(fichaFrenteD.getText().equals("O")&&fichaFrenteD.getForeground().equals(java.awt.Color.WHITE)&&fichaAtrasI.getText().equals("")){ 
                            movimientoComer(espacio);
                            contadorDos--;    
                            if(contadorDos==0){
                                JOptionPane.showMessageDialog(null,"Ha ganado el jugador uno!");
                                 ganador = true;
                            }else{
                                JOptionPane.showMessageDialog(null,"Comi√≥ jugador uno!");
                            }
                        }else{
                            JOptionPane.showMessageDialog(null,"No es su turno!");
                        }
            }else{
                verificar(espacio);
                cambiar(espacio);
                
            }
        }
      }
    }
    
    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        this.pintarDamas();
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // En el momento que presiona el bot√≥n de inicio pinta las fichas y comienza
        this.pintarDamas();
    }//GEN-LAST:event_jMenu1MouseClicked

    private void c5_f4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5_f4MouseReleased
            comerCentrales(c5_f4, c4_f3, c4_f5, c6_f3, c6_f5);        
    }//GEN-LAST:event_c5_f4MouseReleased

    private void c4_f5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4_f5MouseReleased
            comerCentrales(c4_f5, c3_f4, c3_f6, c5_f4, c5_f6);        
    }//GEN-LAST:event_c4_f5MouseReleased

    private void c2_f5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_f5MouseReleased
             comerCentrales(c2_f5, c1_f4, c1_f6, c3_f4, c3_f6);                                     
    }//GEN-LAST:event_c2_f5MouseReleased

    private void c3_f4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3_f4MouseReleased
          comerCentrales(c3_f4, c2_f3, c2_f5, c4_f3, c4_f5);                      
    }//GEN-LAST:event_c3_f4MouseReleased

    private void c0_f1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c0_f1MouseReleased
      //Los que terminan o comienzan con n√∫meros muy bajos de ubicaci√≥n o el m√°s alto lleva diferentes a los que usan la funci√≥n de "comerCentrales"
       comerCostados(c0_f1,c1_f1,c1_f2);
           
    }//GEN-LAST:event_c0_f1MouseReleased

    private void c0_f3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c0_f3MouseReleased
        comerCostados(c0_f3,c1_f2,c1_f4);
   
    }//GEN-LAST:event_c0_f3MouseReleased

    private void c0_f5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c0_f5MouseReleased
             comerCostados(c0_f5,c1_f4,c1_f6);

    }//GEN-LAST:event_c0_f5MouseReleased

    private void c0_f7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c0_f7MouseReleased
             comerCostados(c0_f7,c1_f6,c1_f6);

        
    }//GEN-LAST:event_c0_f7MouseReleased

    private void c1_f0MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_f0MouseReleased
             comerCostados(c1_f0,c0_f1,c2_f1);
    }//GEN-LAST:event_c1_f0MouseReleased

    private void c1_f2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_f2MouseReleased
     comerCentrales(c1_f2, c0_f1, c0_f3, c2_f1, c2_f3);       
    }//GEN-LAST:event_c1_f2MouseReleased

    private void c1_f4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_f4MouseReleased
       comerCentrales(c1_f4, c0_f3, c0_f5, c2_f3, c2_f5);    
    }//GEN-LAST:event_c1_f4MouseReleased

    private void c1_f6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c1_f6MouseReleased
       comerCentrales(c1_f6, c0_f5, c0_f7, c2_f5, c2_f7);                  
    }//GEN-LAST:event_c1_f6MouseReleased

    private void c2_f1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_f1MouseReleased
        comerCentrales(c2_f1, c1_f0, c1_f2, c3_f0, c3_f2);            
    }//GEN-LAST:event_c2_f1MouseReleased

    private void c2_f3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_f3MouseReleased
         comerCentrales(c2_f3, c1_f2, c1_f4, c3_f2, c3_f4);      
    }//GEN-LAST:event_c2_f3MouseReleased

    private void c2_f7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c2_f7MouseReleased
          comerCostados(c2_f7,c1_f6,c3_f6);

    }//GEN-LAST:event_c2_f7MouseReleased

    private void c3_f0MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3_f0MouseReleased
      comerCostados(c3_f0,c2_f1,c4_f1);
    }//GEN-LAST:event_c3_f0MouseReleased

    private void c3_f2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3_f2MouseReleased
           comerCentrales(c3_f2, c2_f1, c2_f3, c4_f1, c4_f3);               
    }//GEN-LAST:event_c3_f2MouseReleased

    private void c3_f6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c3_f6MouseReleased
             comerCentrales(c3_f6, c2_f5, c2_f7, c4_f5, c4_f7);                     
    }//GEN-LAST:event_c3_f6MouseReleased

    private void c4_f1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4_f1MouseReleased
            comerCentrales(c4_f1, c3_f0, c3_f2, c5_f0, c5_f2);       
    }//GEN-LAST:event_c4_f1MouseReleased

    private void c4_f3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4_f3MouseReleased
             comerCentrales(c4_f3, c3_f2, c3_f4, c5_f2, c5_f4);     
    }//GEN-LAST:event_c4_f3MouseReleased

    private void c4_f7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c4_f7MouseReleased
      comerCostados(c4_f7,c3_f6,c5_f6);
    }//GEN-LAST:event_c4_f7MouseReleased

    private void c5_f0MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5_f0MouseReleased
      comerCostados(c5_f0,c4_f1,c6_f1);
            
    }//GEN-LAST:event_c5_f0MouseReleased

    private void c5_f2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5_f2MouseReleased
        comerCentrales(c5_f2, c4_f1, c4_f3, c6_f1, c6_f3);                
    }//GEN-LAST:event_c5_f2MouseReleased

    private void c5_f6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c5_f6MouseReleased
         comerCentrales(c5_f6, c4_f5, c4_f7, c6_f5, c6_f7);                
    }//GEN-LAST:event_c5_f6MouseReleased

    private void c6_f1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6_f1MouseReleased
         comerCentrales(c6_f1, c5_f0, c5_f2, c7_f0, c7_f2);        
    }//GEN-LAST:event_c6_f1MouseReleased

    private void c6_f3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6_f3MouseReleased
        comerCentrales(c6_f3, c5_f2, c5_f4, c7_f2, c7_f4);                              
    }//GEN-LAST:event_c6_f3MouseReleased

    private void c6_f5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6_f5MouseReleased
        comerCentrales(c6_f5, c5_f4, c5_f6, c7_f4, c7_f6); 
    }//GEN-LAST:event_c6_f5MouseReleased

    private void c6_f7MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c6_f7MouseReleased
       comerCostados(c6_f7,c5_f6,c7_f6); 
       
    }//GEN-LAST:event_c6_f7MouseReleased

    private void c7_f0MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7_f0MouseReleased
      comerCostados(c7_f0,c6_f1,c6_f1);
    }//GEN-LAST:event_c7_f0MouseReleased

    private void c7_f2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7_f2MouseReleased
      comerCostados(c7_f2,c6_f1,c6_f3);
    }//GEN-LAST:event_c7_f2MouseReleased

    private void c7_f4MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7_f4MouseReleased
      comerCostados(c7_f4,c6_f3,c6_f5);
    }//GEN-LAST:event_c7_f4MouseReleased

    private void c7_f6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c7_f6MouseReleased
      comerCostados(c7_f6,c6_f5,c6_f7);
    }//GEN-LAST:event_c7_f6MouseReleased

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // Para el momento que un jugador se rinda.
        if(turno%2==0){
            JOptionPane.showMessageDialog(null,"Ha ganado el jugador uno, (FICHAS BLANCAS)!");
        }else{
            JOptionPane.showMessageDialog(null,"Ha ganado el jugador dos, (FICHAS NEGRAS)!");
            

        }
    }//GEN-LAST:event_jMenu2MouseClicked
      
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmDamas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmDamas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmDamas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmDamas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel c0_f0;
    private javax.swing.JLabel c0_f1;
    private javax.swing.JLabel c0_f2;
    private javax.swing.JLabel c0_f3;
    private javax.swing.JLabel c0_f4;
    private javax.swing.JLabel c0_f5;
    private javax.swing.JLabel c0_f6;
    private javax.swing.JLabel c0_f7;
    private javax.swing.JLabel c1_f0;
    private javax.swing.JLabel c1_f1;
    private javax.swing.JLabel c1_f2;
    private javax.swing.JLabel c1_f3;
    private javax.swing.JLabel c1_f4;
    private javax.swing.JLabel c1_f5;
    private javax.swing.JLabel c1_f6;
    private javax.swing.JLabel c1_f7;
    private javax.swing.JLabel c2_f0;
    private javax.swing.JLabel c2_f1;
    private javax.swing.JLabel c2_f2;
    private javax.swing.JLabel c2_f3;
    private javax.swing.JLabel c2_f4;
    private javax.swing.JLabel c2_f5;
    private javax.swing.JLabel c2_f6;
    private javax.swing.JLabel c2_f7;
    private javax.swing.JLabel c3_f0;
    private javax.swing.JLabel c3_f1;
    private javax.swing.JLabel c3_f2;
    private javax.swing.JLabel c3_f3;
    private javax.swing.JLabel c3_f4;
    private javax.swing.JLabel c3_f5;
    private javax.swing.JLabel c3_f6;
    private javax.swing.JLabel c3_f7;
    private javax.swing.JLabel c4_f0;
    private javax.swing.JLabel c4_f1;
    private javax.swing.JLabel c4_f2;
    private javax.swing.JLabel c4_f3;
    private javax.swing.JLabel c4_f4;
    private javax.swing.JLabel c4_f5;
    private javax.swing.JLabel c4_f6;
    private javax.swing.JLabel c4_f7;
    private javax.swing.JLabel c5_f0;
    private javax.swing.JLabel c5_f1;
    private javax.swing.JLabel c5_f2;
    private javax.swing.JLabel c5_f3;
    private javax.swing.JLabel c5_f4;
    private javax.swing.JLabel c5_f5;
    private javax.swing.JLabel c5_f6;
    private javax.swing.JLabel c5_f7;
    private javax.swing.JLabel c6_f0;
    private javax.swing.JLabel c6_f1;
    private javax.swing.JLabel c6_f2;
    private javax.swing.JLabel c6_f3;
    private javax.swing.JLabel c6_f4;
    private javax.swing.JLabel c6_f5;
    private javax.swing.JLabel c6_f6;
    private javax.swing.JLabel c6_f7;
    private javax.swing.JLabel c7_f0;
    private javax.swing.JLabel c7_f1;
    private javax.swing.JLabel c7_f2;
    private javax.swing.JLabel c7_f3;
    private javax.swing.JLabel c7_f4;
    private javax.swing.JLabel c7_f5;
    private javax.swing.JLabel c7_f6;
    private javax.swing.JLabel c7_f7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
